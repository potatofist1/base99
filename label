import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
import pickle
import numpy as np

# 데이터 로드 및 전처리
df = pd.read_excel("respiratory symptoms and treatment.xlsx")
df_cleaned = df.dropna(subset=['Symptoms', 'Disease'])
df_cleaned['Age'] = df_cleaned['Age'].fillna(df_cleaned['Age'].mean())
df_cleaned['Sex'] = df_cleaned['Sex'].fillna(df_cleaned['Sex'].mode()[0])
df_cleaned['Nature'] = df_cleaned['Nature'].fillna('unknown')

# TF-IDF 변환
tfidf_vectorizer = TfidfVectorizer(max_features=500)
X_symptoms = tfidf_vectorizer.fit_transform(df_cleaned['Symptoms']).toarray()

# 범주형 데이터 인코딩
label_encoder_sex = LabelEncoder()
label_encoder_nature = LabelEncoder()
label_encoder_disease = LabelEncoder()

X_sex = label_encoder_sex.fit_transform(df_cleaned['Sex'])
X_nature = label_encoder_nature.fit_transform(df_cleaned['Nature'])
y_disease = label_encoder_disease.fit_transform(df_cleaned['Disease'])

# 데이터 통합 및 분리
X = np.hstack([X_symptoms, X_sex.reshape(-1, 1), X_nature.reshape(-1, 1)])
y = y_disease
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)

# 모델 학습
rf_model = RandomForestClassifier(random_state=42, n_estimators=100)
rf_model.fit(X_train, y_train)

# 모델과 벡터라이저 저장
with open("model.pkl", "wb") as f:
    pickle.dump(rf_model, f)
with open("vectorizer.pkl", "wb") as f:
    pickle.dump(tfidf_vectorizer, f)
